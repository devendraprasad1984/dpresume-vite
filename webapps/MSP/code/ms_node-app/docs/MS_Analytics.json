{
    "openapi":"3.0.2",
    "info": {
      "title":"MS Analytics",
      "version":"0.1"
    },
    "servers": [
      {
        "url":"https://api.server.test/v1",
        "description": "Production"
      },
      {
        "url": "https://staging.api.server.test/v1",
        "description": "Staging"
      },
      {
        "url": "https://dev.api.server.test/v1",
        "description": "Dev"
      }
    ],
    "paths": {
        "/analytics/v1/organizations/": {
          "get": {
            "summary": "Get global analytics information.",
            "description": "On success, returns account information generated by lambda function.",
            "requestBody": {
              "description": "The name of the lambda function to execute and the payload",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "lambda": {
                        "description": "The name of the lambda function to execute. [REQUIRED]",
                        "type": "string"
                      },
                      "payload": {
                        "description": "The payload to pass to the lambda function. [OPTIONAL]",
                        "type": "object"
                      }
                    },
                    "required": ["lambda"]
                  }
                }
              },
              "required": true
            },
            "responses": {
                "200": {
                    "description": "An object with keys (slicers) and values (counts) of all accounts.",
                    "content": {
                        "application/json": {
                            "schema": {
                              "$ref": "components/schemas/responses/2xx/accounts/orgAccountCounts.json"
                            }
                        }
                    }
                },
                "400": {"$ref": "components/schemas/responses/4xx/genericClientError.json"}, 
                "401": {"$ref": "components/schemas/responses/4xx/notAuthorized.json"},
                "403": {"$ref": "components/schemas/responses/4xx/notPermitted.json"},
                "404": {"$ref": "components/schemas/responses/4xx/notFound.json"},
                "405": {"$ref": "components/schemas/responses/4xx/notSupported.json"},
                "408": {"$ref": "components/schemas/responses/4xx/timeout.json"},
                "500": {"$ref": "components/schemas/responses/5xx/genericServerError.json"},
                "501": {"$ref": "components/schemas/responses/5xx/notImplemented.json"},
                "502": {"$ref": "components/schemas/responses/5xx/badGateway.json"},
                "503": {"$ref": "components/schemas/responses/5xx/serviceUnavailable.json"},
                "504": {"$ref": "components/schemas/responses/5xx/gatewayTimeout.json"}
            },
            "operationId": "getOrgAnalyticsV1"
        }
        },
        "/analytics/v1/organizations/{organizationId}/": {
            "get": {
                "summary": "Get organizational analytics information.",
                "description": "On success, returns organizational account information generated by lambda function.",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "simple"
                    }
                ],
                "requestBody": {
                  "description": "The name of the lambda function to execute and the payload",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "lambda": {
                            "description": "The name of the lambda function to execute. [REQUIRED]",
                            "type": "string"
                          },
                          "payload": {
                            "description": "The payload to pass to the lambda function. [OPTIONAL]",
                            "type": "object"
                          }
                        },
                        "required": ["lambda"]
                      }
                    }
                  },
                  "required": true
                },
                "responses": {
                    "200": {
                        "description": "An object with keys (slicers) and values (counts) of all org accounts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                  "$ref": "components/schemas/responses/2xx/accounts/orgAccountCounts.json"
                                }
                            }
                        }
                    },
                    "400": {"$ref": "components/schemas/responses/4xx/genericClientError.json"}, 
                    "401": {"$ref": "components/schemas/responses/4xx/notAuthorized.json"},
                    "403": {"$ref": "components/schemas/responses/4xx/notPermitted.json"},
                    "404": {"$ref": "components/schemas/responses/4xx/notFound.json"},
                    "405": {"$ref": "components/schemas/responses/4xx/notSupported.json"},
                    "408": {"$ref": "components/schemas/responses/4xx/timeout.json"},
                    "500": {"$ref": "components/schemas/responses/5xx/genericServerError.json"},
                    "501": {"$ref": "components/schemas/responses/5xx/notImplemented.json"},
                    "502": {"$ref": "components/schemas/responses/5xx/badGateway.json"},
                    "503": {"$ref": "components/schemas/responses/5xx/serviceUnavailable.json"},
                    "504": {"$ref": "components/schemas/responses/5xx/gatewayTimeout.json"}
                },
                "operationId": "getOrgAnalyticsForOrgV1"
            }
        }
    }
  }